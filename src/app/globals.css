@import "tailwindcss";

/* Import Space Mono font */
@import url('https://fonts.googleapis.com/css2?family=Space+Mono:wght@400;700&display=swap');

@layer base {
  :root {
    /* LionSpace Terminal Color System */
    --terminal-bg: 3 7 18;           /* #030712 */
    --terminal-secondary: 15 23 42;  /* #0F172A */
    --terminal-cyan: 110 231 183;    /* #6EE7B7 */
    --terminal-gold: 255 183 0;      /* #FFB700 */
    --terminal-red: 212 63 63;       /* #D43F3F */
    --terminal-text: 229 231 235;    /* #E5E7EB */
    --terminal-muted: 148 163 184;   /* #94A3B8 */
    --terminal-border: 30 41 59;     /* #1E293B */
    
    /* Animation speeds */
    --scan-speed: 8s;
    --data-flow-speed: 3s;
    --pulse-speed: 2s;
    
    /* Grid dimensions */
    --grid-size: 40px;
    --grid-opacity: 0.03;
  }

  * {
    border-color: rgba(var(--terminal-border), 0.3);
  }

  body {
    background-color: #030712;
    color: #E5E7EB;
    font-family: 'Space Mono', monospace;
    letter-spacing: 0.02em;
    @apply antialiased;
  }
  
  html.dark body {
    background-color: #030712;
    color: #E5E7EB;
  }
  
  /* Terminal cursor effect */
  ::selection {
    background: rgba(var(--terminal-cyan), 0.3);
    color: rgb(var(--terminal-text));
  }
}

@layer components {
  /* Terminal Grid Background */
  .terminal-grid {
    position: fixed;
    inset: 0;
    background: 
      linear-gradient(180deg, rgb(var(--terminal-bg)) 0%, rgb(var(--terminal-secondary)) 100%),
      repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        rgba(var(--terminal-border), var(--grid-opacity)) 2px,
        rgba(var(--terminal-border), var(--grid-opacity)) 4px
      ),
      repeating-linear-gradient(
        90deg,
        transparent,
        transparent 2px,
        rgba(var(--terminal-border), var(--grid-opacity)) 2px,
        rgba(var(--terminal-border), var(--grid-opacity)) 4px
      );
    background-size: 100% 100%, var(--grid-size) var(--grid-size), var(--grid-size) var(--grid-size);
    pointer-events: none;
    z-index: 1;
    animation: grid-fade 4s ease-in-out infinite;
  }

  /* Terminal Text Gradient - Enhanced */
  .terminal-text-gradient {
    background: linear-gradient(
      135deg,
      rgb(var(--terminal-cyan)) 0%,
      rgb(var(--terminal-gold)) 50%,
      rgb(var(--terminal-cyan)) 100%
    );
    background-size: 200% 200%;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradient-shift 3s ease infinite;
  }

  @keyframes gradient-shift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  /* Data Flow Lines */
  .data-flow-line {
    position: absolute;
    height: 1px;
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba(var(--terminal-cyan), 0.8) 50%,
      transparent 100%
    );
    animation: data-flow var(--data-flow-speed) ease-in-out infinite;
  }

  /* Scan Line Effect */
  .scanline {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba(var(--terminal-cyan), 0.6) 50%,
      transparent 100%
    );
    animation: scan-line var(--scan-speed) linear infinite;
    z-index: 2;
  }

  /* Network Node */
  .network-node {
    position: absolute;
    width: 6px;
    height: 6px;
    background: rgba(var(--terminal-cyan), 0.9);
    border: 1px solid rgba(var(--terminal-cyan), 1);
    box-shadow: 
      0 0 10px rgba(var(--terminal-cyan), 0.5),
      0 0 20px rgba(var(--terminal-cyan), 0.3),
      inset 0 0 4px rgba(var(--terminal-cyan), 0.5);
    animation: node-pulse var(--pulse-speed) ease-in-out infinite;
  }

  /* Terminal Text Glow */
  .terminal-glow {
    text-shadow: 
      0 0 10px rgba(var(--terminal-cyan), 0.5),
      0 0 20px rgba(var(--terminal-cyan), 0.3),
      0 0 30px rgba(var(--terminal-cyan), 0.1);
    animation: glow-pulse 2s ease-in-out infinite alternate;
  }
  
  .terminal-glow-gold {
    text-shadow: 
      0 0 10px rgba(var(--terminal-gold), 0.5),
      0 0 20px rgba(var(--terminal-gold), 0.3),
      0 0 30px rgba(var(--terminal-gold), 0.1);
  }

  /* Hero Title with Gradient */
  .hero-title {
    background: linear-gradient(
      180deg,
      rgb(var(--terminal-cyan)) 0%,
      rgba(var(--terminal-cyan), 0.6) 100%
    );
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    letter-spacing: 0.05em;
    font-weight: 700;
  }

  /* Terminal Button */
  .terminal-button {
    @apply relative overflow-hidden font-terminal;
    background: rgba(var(--terminal-bg), 0.8);
    border: 1px solid rgba(var(--terminal-cyan), 0.3);
    color: rgb(var(--terminal-cyan));
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .terminal-button:hover {
    background: rgba(var(--terminal-cyan), 0.1);
    border-color: rgba(var(--terminal-cyan), 0.8);
    box-shadow: 
      0 0 20px rgba(var(--terminal-cyan), 0.4),
      inset 0 0 20px rgba(var(--terminal-cyan), 0.1);
    transform: translateY(-1px);
  }

  .terminal-button:active {
    transform: translateY(0);
  }

  .terminal-button::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(var(--terminal-cyan), 0.4),
      transparent
    );
    transition: left 0.5s ease;
  }

  .terminal-button:hover::before {
    left: 100%;
  }

  /* Terminal Card */
  .terminal-card {
    @apply relative;
    background: rgba(var(--terminal-bg), 0.95);
    border: 1px solid rgba(var(--terminal-border), 0.5);
    box-shadow: 
      0 0 40px rgba(var(--terminal-cyan), 0.05),
      inset 0 0 20px rgba(var(--terminal-bg), 0.5);
  }
  
  .terminal-card::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(var(--terminal-cyan), 0.5),
      transparent
    );
    animation: data-flow 3s ease-in-out infinite;
  }

  /* Status Indicators */
  .status-online {
    @apply relative;
    width: 8px;
    height: 8px;
    background: rgb(var(--terminal-cyan));
    border-radius: 50%;
    box-shadow: 0 0 10px rgba(var(--terminal-cyan), 0.8);
  }
  
  .status-online::before {
    content: "";
    position: absolute;
    inset: 0;
    background: rgb(var(--terminal-cyan));
    border-radius: 50%;
    animation: status-ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
  }

  /* Terminal Input */
  .terminal-input {
    @apply bg-terminal-bg border border-terminal-border text-terminal-text font-terminal;
    transition: all 0.2s ease;
  }
  
  .terminal-input:focus {
    @apply border-terminal-cyan outline-none;
    box-shadow: 
      0 0 20px rgba(var(--terminal-cyan), 0.2),
      inset 0 0 10px rgba(var(--terminal-cyan), 0.05);
  }

  /* Command Line Prompt */
  .command-prompt::before {
    content: "> ";
    color: rgb(var(--terminal-cyan));
    font-weight: bold;
  }

  /* Terminal Cursor */
  .terminal-cursor {
    display: inline-block;
    width: 10px;
    height: 20px;
    background: rgb(var(--terminal-cyan));
    animation: terminal-blink 1.5s step-end infinite;
    vertical-align: text-bottom;
    margin-left: 2px;
  }

  /* Data Stream Display */
  .data-stream {
    font-family: 'Space Mono', monospace;
    font-size: 0.875rem;
    line-height: 1.4;
    color: rgba(var(--terminal-cyan), 0.8);
    white-space: pre-wrap;
    word-break: break-all;
  }

  /* Alert Banner */
  .alert-critical {
    @apply bg-terminal-red/10 border border-terminal-red/50 text-terminal-red;
    box-shadow: 0 0 30px rgba(var(--terminal-red), 0.2);
  }
  
  .alert-warning {
    @apply bg-terminal-gold/10 border border-terminal-gold/50 text-terminal-gold;
    box-shadow: 0 0 30px rgba(var(--terminal-gold), 0.2);
  }
  
  .alert-info {
    @apply bg-terminal-cyan/10 border border-terminal-cyan/50 text-terminal-cyan;
    box-shadow: 0 0 30px rgba(var(--terminal-cyan), 0.2);
  }
}

@layer utilities {
  /* Accessibility */
  .skip-link {
    @apply absolute left-[-9999px] z-50 bg-terminal-bg text-terminal-cyan px-4 py-2 rounded border border-terminal-cyan;
  }

  .skip-link:focus {
    @apply left-4 top-4;
  }

  /* Focus Styles */
  .focus-terminal {
    @apply focus:outline-none focus:ring-2 focus:ring-terminal-cyan focus:ring-offset-2 focus:ring-offset-terminal-bg;
  }

  /* Utility Classes */
  .text-terminal {
    font-family: 'Space Mono', monospace;
    letter-spacing: 0.02em;
  }

  .border-terminal {
    border: 1px solid rgba(var(--terminal-border), 0.3);
  }

  /* Enhanced Glow Effects */
  .glow-cyan {
    filter: drop-shadow(0 0 10px rgba(var(--terminal-cyan), 0.5));
  }

  .glow-gold {
    filter: drop-shadow(0 0 10px rgba(var(--terminal-gold), 0.5));
  }

  .glow-red {
    filter: drop-shadow(0 0 10px rgba(var(--terminal-red), 0.5));
  }
  
  .glow-green {
    filter: drop-shadow(0 0 10px rgba(110, 231, 183, 0.5));
  }

  /* Shadow Glow Effects for TailwindUI Components */
  .shadow-glow-cyan {
    box-shadow: 
      0 0 20px rgba(var(--terminal-cyan), 0.3),
      0 0 40px rgba(var(--terminal-cyan), 0.2),
      inset 0 0 10px rgba(var(--terminal-cyan), 0.1);
  }

  .shadow-glow-gold {
    box-shadow: 
      0 0 20px rgba(var(--terminal-gold), 0.3),
      0 0 40px rgba(var(--terminal-gold), 0.2),
      inset 0 0 10px rgba(var(--terminal-gold), 0.1);
  }

  .shadow-glow-red {
    box-shadow: 
      0 0 20px rgba(var(--terminal-red), 0.3),
      0 0 40px rgba(var(--terminal-red), 0.2),
      inset 0 0 10px rgba(var(--terminal-red), 0.1);
  }
  
  .shadow-glow-green {
    box-shadow: 
      0 0 20px rgba(110, 231, 183, 0.3),
      0 0 40px rgba(110, 231, 183, 0.2),
      inset 0 0 10px rgba(110, 231, 183, 0.1);
  }

  .shadow-glow-pulse {
    animation: glow-pulse 2s ease-in-out infinite;
  }
  
  .shadow-glow-strong {
    box-shadow: 
      0 0 30px rgba(var(--terminal-cyan), 0.5),
      0 0 60px rgba(var(--terminal-cyan), 0.3),
      inset 0 0 20px rgba(var(--terminal-cyan), 0.1);
  }

  /* Animation Classes */
  .animate-pulse-glow {
    animation: pulse-glow 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  .animate-scan {
    animation: scan-effect 8s linear infinite;
  }
  
  .animate-grid-fade {
    animation: grid-fade 4s ease-in-out infinite;
  }

  @keyframes pulse-glow {
    0%, 100% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.8;
      transform: scale(1.02);
    }
  }

  @keyframes scan-effect {
    0% {
      transform: translateY(-100%);
    }
    100% {
      transform: translateY(100vh);
    }
  }
  
  @keyframes grid-fade {
    0%, 100% {
      opacity: 0.03;
    }
    50% {
      opacity: 0.06;
    }
  }

  /* Scanline Background Pattern */
  .bg-scanline {
    background: linear-gradient(
      180deg,
      transparent 0%,
      rgba(var(--terminal-cyan), 0.1) 50%,
      transparent 100%
    );
  }

  /* Terminal Font Classes */
  .font-terminal {
    font-family: 'Space Mono', monospace;
  }

  /* Terminal Color Classes */
  .bg-terminal-bg { background-color: rgb(var(--terminal-bg)); }
  .bg-terminal-secondary { background-color: rgb(var(--terminal-secondary)); }
  .bg-terminal-cyan { background-color: rgb(var(--terminal-cyan)); }
  .bg-terminal-gold { background-color: rgb(var(--terminal-gold)); }
  .bg-terminal-red { background-color: rgb(var(--terminal-red)); }
  .bg-terminal-green { background-color: rgb(110, 231, 183); }
  
  .text-terminal-text { color: rgb(var(--terminal-text)); }
  .text-terminal-cyan { color: rgb(var(--terminal-cyan)); }
  .text-terminal-gold { color: rgb(var(--terminal-gold)); }
  .text-terminal-red { color: rgb(var(--terminal-red)); }
  .text-terminal-green { color: rgb(110, 231, 183); }
  .text-terminal-muted { color: rgb(var(--terminal-muted)); }
  
  .border-terminal-line { border-color: rgba(var(--terminal-border), 0.5); }
  .border-terminal-cyan { border-color: rgba(var(--terminal-cyan), 0.5); }
  .border-terminal-gold { border-color: rgba(var(--terminal-gold), 0.5); }
  .border-terminal-red { border-color: rgba(var(--terminal-red), 0.5); }
  .border-terminal-green { border-color: rgba(110, 231, 183, 0.5); }
  .border-terminal-border { border-color: rgb(var(--terminal-border)); }
}

/* Reduced Motion Support */
@media (prefers-reduced-motion: reduce) {
  .terminal-grid::before,
  .data-flow-line,
  .scanline,
  .network-node,
  .terminal-glow,
  .terminal-button::before,
  .terminal-cursor,
  .status-online::before {
    animation: none !important;
  }

  .terminal-button:hover {
    transition: none;
  }
}

/* Remove the large green circle specifically */
/* Target elements with inline styles that create large circles */
div[style*="width: 100%"][style*="height: 100%"][style*="border-radius: 50%"],
div[style*="position: fixed"][style*="border-radius: 50%"],
div[style*="position: absolute"][style*="border-radius: 50%"],
div[style*="borderRadius: '50%'"],
div[style*="backgroundColor: 'rgb(110, 231, 183)"],
div[style*="background-color: rgb(110, 231, 183)"],
div[style*="width: 100vw"][style*="height: 100vh"],
canvas + div[style*="position: fixed"][style*="width: 100%"][style*="height: 100%"],
.fixed.inset-0[style*="background"] {
  display: none !important;
}

/* Also hide any large circular elements */
div.fixed.inset-0 > div[style*="border-radius"],
div.fixed.inset-0 > div[style*="borderRadius"],
div[style*="width: 100%"][style*="height: 100%"][style*="background"],
div[style*="width: 100vw"][style*="height: 100vh"][style*="background"] {
  display: none !important;
}

/* Print Styles */
@media print {
  .terminal-grid,
  .scanline,
  .data-flow-line {
    display: none;
  }
  
  body {
    background: white;
    color: black;
  }
}